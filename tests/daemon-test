#! /bin/sh

set -e

cd "$(dirname "$0")"

rm -f tmp.*

cleanup() {
    pid=$(cat tmp.pid 2>/dev/null) || return 0
    kill -HUP "${pid}"
}

trap cleanup EXIT

ssh-keygen -q -N '' -t ed25519 -f tmp.key

go build -o tmp.agent ../cmd/sigsum-agent

# The cat process blocks until the backgrounded process closes its
# stdout, meaning that it has bound the socket and is ready to serve.
(./tmp.agent -s ./tmp.socket -k tmp.key --pid-file tmp.pid & ) | cat

export SSH_AUTH_SOCK=./tmp.socket
ssh-add -L > tmp.pub
grep '^ssh-ed25519 .* oracle key$' tmp.pub >/dev/null

echo foo > tmp.msg
ssh-keygen -q -Y sign -n ns -f tmp.pub tmp.msg
ssh-keygen -q -Y check-novalidate -n ns -f tmp.pub -s tmp.msg.sig < tmp.msg
